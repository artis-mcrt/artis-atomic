---
name: Build and test

on: [push]

jobs:
    build:
        strategy:
            matrix:
                os: [ubuntu-22.04]

        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  cache: pip
                  python-version: '3.11'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip wheel setuptools
                  python -m pip install -r requirements.txt

            - name: Install artisatomic
              run: |
                  python -m pip install -e .

            - name: Lint with flake8
              working-directory: artisatomic/
              run: |
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: Cache CMFGEN atomic data
              uses: actions/cache@v3
              id: cache-cmfgendata
              with:
                  path: atomic-data-hillier/atomic_data_15nov16.tar.xz
                  key: atomic-data-hillier/atomic_data_15nov16.tar.xz

            - name: Download/extract CMFGEN atomic data
              working-directory: atomic-data-hillier/
              run: source ./setup_cmfgen_data.sh

            - name: Cache JPLT atomic data
              uses: actions/cache@v3
              id: cache-jpltdata
              with:
                  path: atomic-data-tanaka-jplt/data_v1.1.tar.gz
                  key: atomic-data-tanaka-jplt/data_v1.1.tar.gz

            - name: Download/extract JPLT atomic data
              working-directory: atomic-data-tanaka-jplt/
              run: source ./setup_jplt_data.sh

            - name: Test with pytest
              run: |
                  pytest

            - name: Generate artis atomic data files
              run: |
                  makeartisatomicfiles -output_folder test_output

            - name: Checksum output files
              run: |
                  cat test_output/compositiondata.txt
                  cat test_output/*.json
                  md5sum test_output/*.txt
                  md5sum -c <(echo b8f6bc739894a563cb55ee83a9a81f8c test_output/adata.txt)
                  md5sum -c <(echo 2e3bd7a2e27ee823afa9977e1b4dc2a5 test_output/compositiondata.txt)
                  md5sum -c <(echo 1c9b987f4eebc22003050a168d0c091d test_output/phixsdata_v2.txt)
                  md5sum -c <(echo 77c382be3756cf6bd7475daffbe2060a test_output/transitiondata.txt)

            - name: tar and zip output files
              if: always()
              run: |
                  tar -cvzf artis_files.tar.gz test_output/*

            - name: Upload output files
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: artis_files.tar.gz
                  path: artis_files.tar.gz
